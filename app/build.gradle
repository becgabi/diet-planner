plugins {
    id 'org.hidetake.swagger.generator' version '2.18.2'
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

apply plugin: "androidx.navigation.safeargs"

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.ptma"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java.srcDirs = ["$projectDir/src", "$projectDir/src/main/java", "$buildDir/generated/openapi/src/main/kotlin"]
        }
    }

    buildFeatures {
        viewBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {

    // RainbowCake
    def rainbow_cake_version = '1.3.0'
    implementation "co.zsmb:rainbow-cake-core:$rainbow_cake_version"
    implementation "co.zsmb:rainbow-cake-dagger:$rainbow_cake_version"
    implementation "co.zsmb:rainbow-cake-timber:$rainbow_cake_version"

    // Coroutines
    def coroutines_version = '1.4.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Navigation component
    implementation "androidx.navigation:navigation-fragment-ktx:$nav_version"
    implementation "androidx.navigation:navigation-ui-ktx:$nav_version"

    // Google base libraries
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'

    // Dagger
    def dagger_version = '2.33'
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Mapstruct
    def mapstruct_version = '1.4.2.Final'
    implementation "org.mapstruct:mapstruct:$mapstruct_version"
    annotationProcessor "org.mapstruct:mapstruct-processor:$mapstruct_version"
    kapt "org.mapstruct:mapstruct-processor:$mapstruct_version"

    // OpenAPI
    swaggerCodegen "org.openapitools:openapi-generator-cli:5.0.1"
    implementation "io.swagger:swagger-annotations:1.6.2"

    // Moshi
    def moshi_version = '1.11.0'
    implementation "com.squareup.moshi:moshi:$moshi_version"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshi_version"

    // Retrofit
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"

    // OkHttp
    def okhttp_version = '4.9.0'
    implementation "com.squareup.okhttp3:okhttp:$okhttp_version"
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"

    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

swaggerSources {
    itfs {
        inputFile = file("$rootDir/specs/api.yaml")
        code {
            language = 'kotlin'
            library = 'jvm-retrofit2'
            outputDir = file("$buildDir/generated/openapi")
            additionalProperties = [
                    packageName       : "com.ptma",
                    apiPackage        : "com.ptma.api",
                    modelPackage      : "com.ptma.model",
                    enumPropertyNaming: "UPPERCASE",
                    useCoroutines     : true,
                    moshiCodeGen      : true,
                    responseWrapper   : null,
                    modelMutable      : true
            ]
        }
    }
}

// Generate sources before build
preBuild.dependsOn generateSwaggerCode